#!/usr/bin/python3
"""
The 7-base_geometry Module
==========================

This module contains a class BaseGeometry with methods area and integer_validator.

Import module
==============
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Class instantiation
====================
>>> bg = BaseGeometry()

Method integer_validator: valid cases
=====================================
>>> bg.integer_validator("age", 10)

Method integer_validator: invalid cases
=======================================
>>> try:
...     bg.integer_validator("flag", True)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] flag must be an integer

>>> try:
...    bg.integer_validator("distance", -5)
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] distance must be greater than 0

>>> try:
...    bg.integer_validator("num", 0)
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] num must be greater than 0

>>> try:
...    bg.integer_validator("name", "Delphine")
... except Exception as e:
...    print("[{}] {}".format(e.__class__.__name__, e))
[TypeError] name must be an integer

>>> try:
...     bg.integer_validator("age", 0)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] age must be greater than 0

>>> try:
...     bg.integer_validator("distance", -4)
... except Exception as e:
...     print("[{}] {}".format(e.__class__.__name__, e))
[ValueError] distance must be greater than 0
"""